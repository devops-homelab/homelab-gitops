# Gateway API configuration for doctor-record-service development environment
replicaCount: 1

app:
  name: doctor-record-service
  version: dev

image:
  repository: registry.digitalocean.com/home-lab-container-registry/doctor-record-service
  tag: b769883 # Use same tag as regular dev for consistency
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 8084
  targetPort: 8084

# Disable traditional ingress
ingress:
  enabled: false

# Enable Gateway API
gateway:
  enabled: true
  gatewayClassName: kong
  annotations:
    gateway.networking.k8s.io/description: Gateway for doctor-record-service dev environment
  listeners:
    - name: http
      port: 80
      protocol: HTTP
      hostname: dev.doctor-records.apps.meditrack-app.me
    - name: https
      port: 443
      protocol: HTTPS
      hostname: dev.doctor-records.apps.meditrack-app.me
      tls:
        mode: Terminate
        certificateRefs:
          - name: dev-doctor-records-tls-secret
    - name: preview-http
      port: 80
      protocol: HTTP
      hostname: preview.dev.doctor-records.apps.meditrack-app.me
    - name: preview-https
      port: 443
      protocol: HTTPS
      hostname: preview.dev.doctor-records.apps.meditrack-app.me
      tls:
        mode: Terminate
        certificateRefs:
          - name: preview-dev-doctor-records-tls-secret

httpRoute:
  enabled: true
  gatewayName: ""  # Will default to {release-name}-gateway
  hostnames:
    - dev.doctor-records.apps.meditrack-app.me
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: "" # Will default to service name
          port: 8084
          weight: 100
  
  # Preview route configuration
  preview:
    enabled: true
    hostnames:
      - preview.dev.doctor-records.apps.meditrack-app.me
    rules:
      - matches:
          - path:
              type: PathPrefix
              value: /
        backendRefs:
          - name: "" # Will default to {release-name}-preview service
            port: 8084
            weight: 100

# TLS Certificate configuration
certificate:
  enabled: true
  secretName: dev-doctor-records-tls-secret
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - dev.doctor-records.apps.meditrack-app.me
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days before expiry

# Preview TLS Certificate configuration  
previewCertificate:
  enabled: true
  secretName: preview-dev-doctor-records-tls-secret
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - preview.dev.doctor-records.apps.meditrack-app.me
  duration: 2160h # 90 days
  renewBefore: 360h # 15 days before expiry

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# Health checks
# healthCheck:
#   enabled: true
#   path: /health
#   initialDelaySeconds: 30
#   periodSeconds: 10

# Environment variables from secrets (matches chart template structure)
envFromSecrets:
  DB_USER:
    secretName: db-credentials
    key: username
  DB_PASSWORD:
    secretName: db-credentials
    key: password
  DB_NAME:
    secretName: db-credentials
    key: name
  DB_HOST:
    secretName: db-credentials
    key: host
  DB_PORT:
    secretName: db-credentials
    key: port

# Blue-Green deployment strategy
strategy:
  type: blueGreen
  blueGreen:
    activeService: doctor-record-service-gateway-active
    previewService: doctor-record-service-gateway-preview
    autoPromotionEnabled: false
    scaleDownDelaySeconds: 30

# Monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
    path: /metrics
    port: 8084

podAnnotations:
  secret.reloader.stakater.com/reload: db-credentials
